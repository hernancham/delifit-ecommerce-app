generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id_usuario String        @id @default(cuid())
  image      String
  email      String        @unique
  nombre     String
  apellido   String
  password   String
  telefono   String        @unique
  documento  String        @unique
  tipo_doc   TipoDocumento
  puntos     Int           @default(0)
  rol        UserRole      @default(USER)
  activo     Boolean       @default(true)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  validacion Boolean       @default(false)
  pedido     Pedido[]
}

model CategoriaInsumo {
  id_cat_insumo String   @id @default(cuid())
  nombre        String
  activo        Boolean  @default(true)
  insumo        Insumo[]
}

model Insumo {
  id_insumo     String             @id @default(cuid())
  img_url       String
  nombre        String
  cantidad      Float
  medida        TipoMedida
  activo        Boolean            @default(true)
  id_cat_insumo String
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  cat_insumo    CategoriaInsumo    @relation(fields: [id_cat_insumo], references: [id_cat_insumo])
  producto      InsumoOnProducto[]
}

model InsumoOnProducto {
  id_insumo   String
  id_producto String
  cantidad    Float
  insumo      Insumo   @relation(fields: [id_insumo], references: [id_insumo])
  producto    Producto @relation(fields: [id_producto], references: [id_producto])

  @@id([id_insumo, id_producto])
}

model CategoriaProducto {
  id_cat_producto String     @id @default(cuid())
  nombre          String
  activo          Boolean    @default(true)
  producto        Producto[]
}

model Producto {
  id_producto     String                @id @default(cuid())
  img_url         String
  nombre          String
  descripcion     String
  precio_base     Float
  activo          Boolean               @default(true)
  id_cat_producto String
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  insumo          InsumoOnProducto[]
  lista_producto  ListaProducto[]
  cat_producto    CategoriaProducto     @relation(fields: [id_cat_producto], references: [id_cat_producto])
  promocion       ProductoOnPromocion[]
}

model ProductoOnPromocion {
  id_producto  String
  id_promocion String
  cantidad     Float
  producto     Producto  @relation(fields: [id_producto], references: [id_producto])
  promocion    Promocion @relation(fields: [id_promocion], references: [id_promocion])

  @@id([id_producto, id_promocion])
}

model CategoriaPromocion {
  id_cat_promocion String      @id @default(cuid())
  nombre           String
  activo           Boolean     @default(true)
  promocion        Promocion[]
}

model Promocion {
  id_promocion     String                @id @default(cuid())
  img_url          String
  nombre           String
  descripcion      String
  precio_base      Float
  precio_oferta    Float                 @default(0)
  estado_promocion Boolean               @default(false)
  dia_promocion    String[]
  fecha_inicio     DateTime
  fecha_fin        DateTime
  activo           Boolean               @default(true)
  id_cat_promocion String
  createdAt        DateTime              @default(now())
  updatedAt        DateTime              @updatedAt
  lista_promocion  ListaPromocion[]
  producto         ProductoOnPromocion[]
  cat_promocion    CategoriaPromocion    @relation(fields: [id_cat_promocion], references: [id_cat_promocion])
}

model ListaProducto {
  cantidad        Int
  precio_cantidad Float
  id_producto     String
  id_pedido       String
  Pedido          Pedido   @relation(fields: [id_pedido], references: [id_pedido])
  producto        Producto @relation(fields: [id_producto], references: [id_producto])

  @@id([id_producto, id_pedido])
}

model ListaPromocion {
  cantidad        Int
  precio_cantidad Float
  id_promocion    String
  id_pedido       String
  Pedido          Pedido    @relation(fields: [id_pedido], references: [id_pedido])
  promocion       Promocion @relation(fields: [id_promocion], references: [id_promocion])

  @@id([id_promocion, id_pedido])
}

model Pedido {
  id_pedido       String           @id @default(cuid())
  id_personal     String?
  id_usuario      String
  subtotal        Float?           @default(0)
  desc_promocion  Float?           @default(0)
  desc_puntos     Float?           @default(0)
  impuesto        Float?           @default(0)
  total           Float            @default(0)
  estado_pedido   EstadoPedido     @default(PROCESANDO)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  lista_producto  ListaProducto[]
  lista_promocion ListaPromocion[]
  usuario         Usuario          @relation(fields: [id_usuario], references: [id_usuario])
}

enum UserRole {
  USER     @map("User")
  ADMIN    @map("Admin")
  MESERO   @map("Mesero")
  CAJERO   @map("Cajero")
  COCINERO @map("Cocinero")
}

enum TipoDocumento {
  DNI                @map("DNI")
  PASAPORTE          @map("Pasaporte")
  CARNET_EXTRANJERIA @map("Carnet de Extranjer√≠a")
  OTRO               @map("Otro")
}

enum TipoMedida {
  Paquete    @map("Paquete")
  Botella    @map("Botella")
  Caja       @map("Caja")
  Unidad     @map("Unidad")
  Kilogramo  @map("Kilogramo")
  Gramo      @map("Gramo")
  Litro      @map("Litro")
  Mililitro  @map("Mililitro")
  Metro      @map("Metro")
  Centimetro @map("Centimetro")
  Milimetro  @map("Milimetro")
}

enum EstadoPedido {
  PROCESANDO @map("Procesando")
  PENDIENTE  @map("Pendiente")
  ACEPTADO   @map("Aceptado")
  RECHAZADO  @map("Rechazado")
  ENVIADO    @map("Enviado")
}
